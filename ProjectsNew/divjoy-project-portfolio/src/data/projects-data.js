const data = [
  {
    index: '1',
    img: 'https://i.imgur.com/yssImRk.png',
    alt: 'Image of Lyrics Search app',
    caption: 'Lyrics Searching App  ',
    title: 'Lyrics Search',
    dateCompleted: '',
    description: 'Basic app built using vanilla Javascript and a lyrics searching API. Would like to integrate an additional API to source sheet music and/or tabs for Piano and Guitar.',
    status: 'In progress.',
    link: 'https://mwoodward1990.github.io/lyricsSearchJS/',
    github: 'https://github.com/mwoodward1990/lyricsSearchJS',
  },
  {
    index: '2',
    img: 'https://i.imgur.com/3UVRX9w.png',
    alt: '',
    caption: '',
    title: 'Flash Cards',
    dateCompleted: '',
    description: 'A basic flash cards web app using vanilla Javascript and local storage.',
    link: 'https://mwoodward1990.github.io/memoryCardsJS/',
    github: 'https://github.com/mwoodward1990/memoryCardsJS',
  },
  {
    index: '3',
    img: 'https://i.imgur.com/FLIe2MW.png',
    alt: '',
    caption: '',
    title: 'Custom Video Player',
    dateCompleted: '',
    description: 'Custom video player built using vanilla Javascript.',
    link: 'https://mwoodward1990.github.io/videoPlayerJS/',
    github: 'https://github.com/mwoodward1990/videoPlayerJS',
  },
  {
    index: '4',
    img: 'https://i.imgur.com/HlkIy5X.png',
    alt: '',
    caption: '',
    title: 'Meal Finder',
    dateCompleted: '',
    description: 'A basic search app to find recipes with the searched for ingredient.',
    link: 'https://mwoodward1990.github.io/mealFinderJS/',
    github: 'https://github.com/mwoodward1990/mealFinderJS',
  },
  {
    index: '5',
    img: 'https://i.imgur.com/aNxj0Bs.png',
    alt: '',
    caption: '',
    title: 'Typing Game',
    dateCompleted: '',
    description: 'This is a small typing game. Will add an API to dynamically bring in new words in addition to some extra functions distributing those words into seperate categories by their defined difficulties.',
    status: 'In progress.',
    link: 'https://mwoodward1990.github.io/typingGameJS/',
    github: 'https://github.com/mwoodward1990/typingGameJS',
  },
  {
    index: '6',
    img: 'https://i.imgur.com/k4YdwOC.png',
    alt: '',
    caption: '',
    title: 'Speech Text Reader',
    dateCompleted: '',
    description: 'Small text reader app to assist in reading.',
    link: 'https://mwoodward1990.github.io/speechTextReaderJS/',
    github: 'https://github.com/mwoodward1990/speechTextReaderJS',
  },
  {
    index: '7',
    img: 'https://i.imgur.com/gRsffnq.png',
    alt: 'Netflix Clone Website Thumbnail',
    caption: 'Netflix Clone(:',
    title: 'Netflix Clone',
    dateCompleted: '',
    description: 'Netflix clone using Unogs Unofficial Netflix API found on RapidAPI. UI built with React, style with Bootstrap, hosted using Netlify. This project is currently a work in progress, check back for frequent updates. Right now, authentication and the Unofficial Netflix API are working. Next I just want to clean up the styling including trying to imitate some of the functionality of the actual Netflix website. For example, the infinite horizontal scrolling movie selection by category. Setting autoplay on everything with onHover, and finishing all the routing. Last but not least I would like to get Stripe at least functioning to mock a subscription feature.',
    status: 'In progress. 50%',
    link: 'https://5f1b79972859c24fec52b3d8--netflixclone-divjoy2.netlify.app',
    github: 'https://github.com/mwoodward1990/netflixClone-Netlify-Divjoy',
    devNotes: "Project folder name: netflixclone-divjoy2, Hosting: Netlify (check live link)"
  },
  {
    index: '8',
    img: 'https://i.imgur.com/YnwMMfh.png',
    alt: 'Screenshot of Basic Auth with React and Firebase App',
    caption: 'Authentication with React and Firebase',
    title: 'Basic Authentication Login',
    dateCompleted: '7/16/2020',
    description: 'Basic example of a login form with additional features such as "forgot password". Including an example of an HTML wireframe converted to a React UI. Fully functioning leveraging Firebase Authentication. HTML template was sourced from Colorlib but styling was substituted with Bootstrap.',
    status: 'Completed. I want to update the alerts for the client side form handling as well as update the default email templates for resetting password.',
    link: 'https://react-firebase-auth-f03bb.web.app/',
    github: 'https://github.com/mwoodward1990/react-firebase-auth-example',
  },
  {
    index: '9',
    img: 'https://i.imgur.com/BbhvVjw.png',
    alt: 'Screenshot of Stripe React app processing a payment.',
    caption: 'Stripe React Payment Processing',
    title: 'React + Stripe eCommerce',
    dateCompleted: '',
    description: 'Basic example Stripe being used as React components to process payments securely. Abstracting away all the technicalities of handling personal payment information, handing that responsiblitiy off to Stripe leaving an easy to work with, effective, clean, and modern payment processing UI.',
    status: 'Almost finished. 80% Need to update the UI to give it a personal touch as well as finish building out a polished starter template version to easily reuse in other projects. Could even update the template with notes throughout similar to the Divjoy documentation explaining which values to switch out and where for different use cases. Basic ---> Advanced.',
    link: 'https://demo-react-stripe-js.vercel.app',
    github: 'https://github.com/mwoodward1990/stripe-react-firebase-starter',
    devNotes: 'Additionally:: ---> Need to rewrite project in own code base.. The current Github repo is empty. In order to create new Github repo and host. Its okay will just take a few extra steps but now I can implement a version with auth too.Ill use Divjoy and then add the Stripe code over. YouTube video walkthrough: https://www.youtube.com/watch?v=w1oLdAPyuok | React Stripe.JS Reference: stripe.com/docs/stripe-js/react | Stripe.JS reference: stripe.com/docs/JS | The Payment Intents API: stripe.com/payments/payment-intents'
  },
  {
    index: '10',
    img: '',
    alt: '',
    caption: '',
    title: 'Social Media Dev Connector',
    dateCompleted: '',
    description: 'Full stack social media app built entirely using React, Redux, Express, and NodeJS. Includes authentication using Redux.',
    status: 'In progress. Needs additional minor features and updated styling',
    link: '',
    github: '',
  },
  {
    index: '11',
    img: '',
    alt: '',
    caption: '',
    title: 'Super Hero App',
    dateCompleted: '',
    description: 'Basic Web App using a Super Hero Search API sourced from RapidAPI to search and return detailed information about Super Heroes.',
    status: 'Finished. Needs styling.',
    link: '',
    github: '',
  },
  {
    index: '12',
    img: 'https://i.imgur.com/oGLgLOw.png',
    alt: 'A screenshot of a blog',
    caption: 'Headless Wordpress Draftbox.co React',
    title: 'WordPress + React',
    dateCompleted: '',
    description: 'WordPress powered blog with a React built UI.',
    status: 'Need to update blog posts and better specify which ones I want visible, also theres the draftbox.co footer I need to remove and I have to check the contact form and see where thats routing too?',
    link: 'https://michaelwoodward2-f9a6.netlify.app/',
    github: '',
  },
  {
    index: '13',
    img: 'https://i.imgur.com/yLm4Fnd.png',
    alt: 'Screenshot of a todo app',
    caption: '',
    title: 'To-Do App',
    dateCompleted: '',
    description: 'To-Do app built using Express and MongoDB. Features server side authentication.',
    status: 'Finished.',
    link: 'https://learnjs-todo.herokuapp.com/',
    github: '',
  },
  {
    index: '14',
    img: 'https://i.imgur.com/c5LP1ng.png',
    alt: 'Screenshot of a weather app',
    caption: '',
    title: 'React Weather App',
    dateCompleted: '',
    description: "Weather App using OpenWeather's API sourced from RapidAPI. Built with React and React Context. Includes additional features like multi-city search and dynamic styling.",
    status: 'In progress. Needs finishing touches.',
    link: '',
    github: '',
  },
  {
    index: '15',
    img: '',
    alt: '',
    caption: '',
    title: 'Covid-19',
    dateCompleted: '',
    description: "Covid-19 tracking app that sources additional location information to determine additional insights. ie. demographic, financial effects, hospital and resource capacity.",
    status: 'In progress.',
    link: '',
    github: '',
  },
  {
    index: '16',
    img: '',
    alt: '',
    caption: '',
    title: 'Conference LWC App',
    dateCompleted: '',
    description: "Conference app built using Lightning Web Components. Example following a Trailhead module.",
    status: 'Completed.',
    link: '',
    github: '',
  },
  {
    index: '17',
    img: 'https://i.imgur.com/vX8SeHY.png',
    alt: 'Screenshot of a basic web app',
    caption: '',
    title: 'Random.me API LWC App',
    dateCompleted: '',
    description: "Front end app built using Lightning Web Components sourcing data from the Random.me API.",
    status: 'Completed.',
    link: '',
    github: '',
  },
  {
    index: '18',
    img: '',
    alt: '',
    caption: '',
    title: 'Dad Jokes Web App',
    dateCompleted: '',
    description: "Basic Dad Jokes web app sourcing the jokes from a Dad Jokes API from RapidAPI.",
    status: 'Completed.',
    link: '',
    github: '',
  },
  {
    index: '19',
    img: '',
    alt: '',
    caption: '',
    title: 'Learn Spanish Kids Game',
    dateCompleted: '',
    description: 'Small voice activated and enabled web app to show images and words to speak in spanish.',
    status: "In progress",
    link: 'https://mwoodward1990.github.io/speechTextReaderJS/',
    github: 'https://github.com/mwoodward1990/speechTextReaderJS',
  },
  {
    index: '20',
    img: '',
    alt: '',
    caption: '',
    title: 'Composed Tech Job Board',
    dateCompleted: '',
    description: 'Using multiple APIs from different sources to source all the possible tech jobs I can find and then build a filtering system into it to specify my particular needs when I am in the market for a new job. Basically just putting all the jobs from everywhere into one view with my specific filters applied.',
    status: "In progress",
    link: '',
    github: '',
  },
];

export default data;
